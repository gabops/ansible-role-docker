---
- block:
    - name: Create Docker daemon configuration directory
      file:
        name: /etc/docker
        state: directory

    - name: Configure Docker daemon
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
      notify: restart docker
  when: docker_daemon_config | length

- block:
    - name: Check home directory for user
      getent:
        database: passwd
        key: "{{ item.user }}"
      register: docker_getent_passwd
      loop: "{{ docker_user_config }}"

    - name: Create ".docker" directory for existing user
      file:
        path: "{{ item.ansible_facts.getent_passwd[item.item.user].4 }}/.docker"
        state: directory
        owner: "{{ item.item.user }}"
        group: "{{ item.ansible_facts.getent_passwd[item.item.user].2 }}"
      when: item.item.config is defined
      loop: "{{ docker_getent_passwd.results }}"

    - name: Configure Docker for user
      template:
        src: config.json.j2
        dest: "{{ item.ansible_facts.getent_passwd[item.item.user].4 }}/.docker/config.json"
        owner: "{{ item.item.user }}"
        group: "{{ item.ansible_facts.getent_passwd[item.item.user].2 }}"
      when: item.item.config is defined
      loop: "{{ docker_getent_passwd.results }}"
  when: docker_user_config | length

- name: Configure Docker group members
  user:
    user: "{{ item }}"
    groups: docker
    append: true
  when: not ansible_check_mode
  loop: "{{ docker_group_members }}"

- name: Configure Docker service
  service:
    name: "{{ docker_service_name }}"
    enabled: "{{ docker_service_enabled }}"
    state: "{{ docker_service_state }}"
